<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorButtonNormal">@color/colorDisabled</item>
        <item name="ms_stepperStyle">@style/StepperStyle</item>
        <item name="popupMenuStyle">@style/PopupMenuStyle</item>
    </style>

    <!-- 'No action bar' theme so that action bar can be set programmatically when necessary -->
    <style name="AppTheme.NoActionBar" parent="AppTheme">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <!-- Theme for 'intro' screen -->
    <style name="AppTheme.Intro">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item name="colorPrimary">@color/colorNight</item>
        <item name="colorPrimaryDark">@color/colorNightDark</item>

        <!-- Intro is dark background, unlike rest of app -->
        <item name="android:colorBackground">@color/colorNight</item>
        <item name="android:textColor">@color/white</item>
    </style>

    <!-- 'Accent' button, which uses primary color: note that buttons use colorAccent so as to
         contrast the primary color. This button sets the 'colorAccent' to the primary color, and
         should be used for 'other' buttons, where they must be distinguished from the regular
         buttons. -->
    <style name="AppTheme.Button.Accent"
        parent="ThemeOverlay.AppCompat.Dark">
        <item name="colorAccent">@color/colorPrimary</item>
    </style>

    <!-- 'Stepper' style, for step-by-step activities using a stepper -->
    <style name="StepperStyle">
        <item name="ms_activeStepColor">@color/colorAccent</item>
        <item name="ms_inactiveStepColor">@color/colorDisabled</item>
    </style>

    <!-- Popup menu style, mainly for overflow buttons. We set offsets so the menu isn't on the
         edge of the screen -->
    <style name="PopupMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        <item name="android:dropDownHorizontalOffset">@dimen/view_padding_negative</item>
        <item name="android:dropDownVerticalOffset">@dimen/view_padding</item>
    </style>
</resources>
